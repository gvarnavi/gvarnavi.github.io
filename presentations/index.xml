<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Presentations on Georgios Varnavides</title><link>https://gvarnavi.github.io/presentations/</link><description>Recent content in Presentations on Georgios Varnavides</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 27 Jul 2023 14:00:00 +0600</lastBuildDate><atom:link href="https://gvarnavi.github.io/presentations/index.xml" rel="self" type="application/rss+xml"/><item><title>MM23 - Simultaneous Reconstructions</title><link>https://gvarnavi.github.io/presentations/mm23-simultaneous/</link><pubDate>Thu, 27 Jul 2023 14:00:00 +0600</pubDate><guid>https://gvarnavi.github.io/presentations/mm23-simultaneous/</guid><description>Georgios Varnavides, Stephanie Ribet, Reed Yalisove, Joel Moore, Colin Ophus, Mary Scott.
2023 Jul 24, Interactive presentation link, Conference proceedings link
Abstract While the observation of magnetic structure with nanometer spatial resolution has been successfully achieved with various transmission electron microscopy (TEM) techniques such as Lorentz TEM, off-axis electron holography, differential phase contrast (DPC), and more recently, Lorentz scanning TEM, atomic-scale imaging of magnetization remains challenging. This can be traced back to the extremely small phase-shifts acquired by the electron beam due to the magnetic vector potential, \( \boldsymbol{A}(x,y,z) \), compared to those acquired due to the electrostatic potential of the sample, \( V(x,y,z) \):</description></item><item><title>Interactive Presentations Workflow</title><link>https://gvarnavi.github.io/presentations/interactive-presentations-workflow/</link><pubDate>Sun, 23 Jul 2023 14:00:00 +0600</pubDate><guid>https://gvarnavi.github.io/presentations/interactive-presentations-workflow/</guid><description>Observable Notebooks First things first: if you want an interactive presentation you need to create (or re-use!) interactive components or widgets. These need to run client-side and would ideally be packaged as react components. I like using observablehq to do this, a reactive notebook environment for javascript code.
Admittedly, coding in javascript is a bit of a learning curve but I have found the scijs family of packages as-well as numjs to be a fairly good numpy replacement for N-dimensional array scientific computing.</description></item></channel></rss>